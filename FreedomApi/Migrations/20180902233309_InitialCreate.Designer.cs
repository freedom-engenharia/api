// <auto-generated />
using System;
using AutomacaoFreedom.Repositorios;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AutomacaoFreedomApi.Migrations
{
    [DbContext(typeof(AutomacaoFreedomContexto))]
    [Migration("20180902233309_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AutomacaoFreedom.Entidades.Tipologia.Empresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("Codigo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataModificacao");

                    b.Property<string>("Logo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Empresa","Tipologia");
                });

            modelBuilder.Entity("AutomacaoFreedom.Entidades.Tipologia.Local", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("Codigo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataModificacao");

                    b.Property<string>("Logo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<Guid>("UnidadeId");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeId");

                    b.ToTable("Local","Tipologia");
                });

            modelBuilder.Entity("AutomacaoFreedom.Entidades.Tipologia.SubLocal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("Codigo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataModificacao");

                    b.Property<Guid?>("LocalId")
                        .IsRequired();

                    b.Property<string>("Logo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("LocalId");

                    b.ToTable("SubLocal","Tipologia");
                });

            modelBuilder.Entity("AutomacaoFreedom.Entidades.Tipologia.Unidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("Codigo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataModificacao");

                    b.Property<Guid>("EmpresaId");

                    b.Property<string>("Logo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Unidade","Tipologia");
                });

            modelBuilder.Entity("AutomacaoFreedomApi.Entidades.Hardware.Device", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("Codigo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataModificacao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Status");

                    b.Property<Guid>("SubLocalId");

                    b.HasKey("Id");

                    b.HasIndex("SubLocalId");

                    b.ToTable("Divece","Hardware");
                });

            modelBuilder.Entity("AutomacaoFreedom.Entidades.Tipologia.Local", b =>
                {
                    b.HasOne("AutomacaoFreedom.Entidades.Tipologia.Unidade", "Unidade")
                        .WithMany("Locais")
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("AutomacaoFreedom.Entidades.Tipologia.SubLocal", b =>
                {
                    b.HasOne("AutomacaoFreedom.Entidades.Tipologia.Local", "Local")
                        .WithMany("SubLocais")
                        .HasForeignKey("LocalId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("AutomacaoFreedom.Entidades.Tipologia.Unidade", b =>
                {
                    b.HasOne("AutomacaoFreedom.Entidades.Tipologia.Empresa", "Empresa")
                        .WithMany("Unidades")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("AutomacaoFreedomApi.Entidades.Hardware.Device", b =>
                {
                    b.HasOne("AutomacaoFreedom.Entidades.Tipologia.SubLocal", "SubLocal")
                        .WithMany("Devices")
                        .HasForeignKey("SubLocalId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
